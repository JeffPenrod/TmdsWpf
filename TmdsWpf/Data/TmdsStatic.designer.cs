#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tmds.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tmdsDatabaseStatic")]
	public partial class TmdsStaticDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCompTrack(tblCompTrack instance);
    partial void UpdatetblCompTrack(tblCompTrack instance);
    partial void DeletetblCompTrack(tblCompTrack instance);
    #endregion
		
		public TmdsStaticDataContext() : 
				base(global::Tmds.Properties.Settings.Default.tmdsDatabaseStaticConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TmdsStaticDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TmdsStaticDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TmdsStaticDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TmdsStaticDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCompTrack> tblCompTracks
		{
			get
			{
				return this.GetTable<tblCompTrack>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCompTracks")]
	public partial class tblCompTrack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private System.Nullable<int> _ControlPoint;
		
		private string _Name;
		
		private string _Type;
		
		private System.Nullable<short> _LX;
		
		private System.Nullable<short> _LY;
		
		private System.Nullable<short> _RX;
		
		private System.Nullable<short> _RY;
		
		private System.Nullable<int> _LeftLink;
		
		private System.Nullable<int> _RightLink;
		
		private System.Nullable<int> _LeftAltLink;
		
		private System.Nullable<int> _RightAltLink;
		
		private System.Nullable<int> _AltLinkOne;
		
		private System.Nullable<int> _AltLinkTwo;
		
		private System.Nullable<int> _Codeline;
		
		private string _PIND;
		
		private string _PCTL;
		
		private string _SIND;
		
		private string _SCTL;
		
		private string _TIND;
		
		private string _TCTL;
		
		private System.Nullable<int> _LeftLimitRange;
		
		private System.Nullable<int> _RightLimitRange;
		
		private System.Nullable<double> _LeftLimitMPRange;
		
		private System.Nullable<double> _RightLimitMPRange;
		
		private string _AuthorityType;
		
		private string _TrkName;
		
		private string _LeftLimitName;
		
		private string _RightLimitName;
		
		private System.Nullable<int> _TerritoryAssignment;
		
		private System.Nullable<int> _Subdivision;
		
		private System.Nullable<bool> _SlottingTK;
		
		private System.Nullable<int> _TrackLength;
		
		private System.Nullable<bool> _DeviceBlocking;
		
		private System.Nullable<bool> _FieldBlocking;
		
		private System.Nullable<bool> _FoulTime;
		
		private System.Nullable<bool> _TrackPermit;
		
		private System.Nullable<bool> _TrackTime;
		
		private System.Nullable<bool> _Traffic;
		
		private string _FBZ;
		
		private string _FBK;
		
		private string _TimeZone;
		
		private System.Nullable<bool> _TrackLock;
		
		private string _TrackLockBit;
		
		private System.Nullable<int> _TrackUID;
		
		private System.Nullable<bool> _OSReporting;
		
		private System.Nullable<byte> _GraphicGroup;
		
		private System.Nullable<byte> _ScreenRegion;
		
		private System.Nullable<byte> _LossOfShunt;
		
		private string _FBZ2;
		
		private string _FBK2;
		
		private System.Nullable<bool> _ReleaseTrainIDTrack;
		
		private System.Nullable<bool> _DisallowTNTOnSplit;
		
		private System.Nullable<bool> _BlueFlag;
		
		private System.Nullable<bool> _OCS;
		
		private string _TrackSpeeds;
		
		private System.Nullable<bool> _PassRedSignalAlertOff;
		
		private string _Notes;
		
		private System.Nullable<bool> _SlotFieldTraffic;
		
		private System.Nullable<int> _PTCBlockID;
		
		private System.Nullable<bool> _RefuseOpposingAuthoritiesFromLeft;
		
		private System.Nullable<bool> _RefuseOpposingAuthoritiesFromRight;
		
		private System.Nullable<bool> _AllowOpposingAuthorityCreationToLeft;
		
		private System.Nullable<bool> _AllowOpposingAuthorityCreationToRight;
		
		private System.Nullable<bool> _HoldingSignalSlottingTrack;
		
		private System.Nullable<bool> _HoldingSignalOSLeftBoundReporting;
		
		private System.Nullable<bool> _HoldingSignalOSRightBoundReporting;
		
		private System.Nullable<bool> _OverrideLeftTrafficCheck;
		
		private System.Nullable<bool> _OverrideRightTrafficCheck;
		
		private string _TrackBlockingReferences;
		
		private System.Nullable<bool> _MatchMode;
		
		private string _MilePostSuffix;
		
		private System.Nullable<bool> _TurnOutTrack;
		
		private System.Nullable<int> _AltLinkThree;
		
		private System.Nullable<int> _AltLinkFour;
		
		private System.Nullable<bool> _HAZMATAlarming;
		
		private System.Nullable<bool> _FoulingTrackSPMS;
		
		private string _RouteName;
		
		private System.Nullable<bool> _RouteBlocking;
		
		private System.Nullable<bool> _TrackIntegrityZone;
		
		private System.Nullable<int> _TrackIntegrityZoneUID;
		
		private string _TrackIntegrityZoneName;
		
		private System.Nullable<int> _TIZMonitorModeTimeOut;
		
		private System.Nullable<bool> _AuthorityConfirmationRequired;
		
		private string _AlternateTrackNames;
		
		private string _AlternateTrackAbbreviation;
		
		private System.Nullable<bool> _AllowMainTrackEntrance;
		
		private string _MainTrackEntrancePoints;
		
		private System.Nullable<bool> _AllowForceOperationsToTWC;
		
		private System.Nullable<bool> _EnableAbsolutePermissiveBlock;
		
		private System.Nullable<int> _AbsolutePermissiveBlockPTCUID;
		
		private string _LineSegmentGroupUID;
		
		private System.Nullable<bool> _DerailmentDetectorEnabled;
		
		private string _DerailmentDetectorIndBit;
		
		private string _DerailmentDetectorCtlBit;
		
		private System.Nullable<bool> _DerailmentDetectorInhibited;
		
		private string _MilepostPrefix;
		
		private string _AdditionalReferenceUID;
		
		private System.Nullable<bool> _EnablePositionReporting;
		
		private string _TrackNameAlias;
		
		private System.Nullable<bool> _EnableNonControlledSiding;
		
		private System.Nullable<bool> _EnableControlledSiding;
		
		private System.Nullable<bool> _DisallowLeftSignalRequestOnOccupancy;
		
		private System.Nullable<bool> _DisallowRightSignalRequestOnOccupancy;
		
		private System.Nullable<int> _TrackSpeedAverage;
		
		private System.Nullable<int> _TrackSpeedMaximum;
		
		private System.Nullable<double> _TrackElevationAverage;
		
		private System.Nullable<double> _TrackElevationMaximum;
		
		private System.Nullable<bool> _TrackElevationAscending;
		
		private System.Nullable<int> _TrackSpeedMaximumFreight;
		
		private System.Nullable<int> _TrackSpeedMaximumPassengar;
		
		private string _QIND;
		
		private string _QCTL;
		
		private string _PTCTrackType;
		
		private System.Nullable<bool> _JointControl;
		
		private System.Nullable<bool> _TMPSEnabled;
		
		private string _TMPSCircuitName;
		
		private System.Nullable<int> _TMPSLinkLeft;
		
		private System.Nullable<int> _TMPSLinkRight;
		
		private System.Nullable<int> _TMPSLinkAlt1;
		
		private System.Nullable<int> _TMPSLinkAlt2;
		
		private System.Nullable<int> _TMPSLinkAlt3;
		
		private System.Nullable<int> _TMPSLinkAlt4;
		
		private System.Nullable<double> _LatitudeLeft;
		
		private System.Nullable<double> _LongitudeLeft;
		
		private System.Nullable<double> _LatitudeRight;
		
		private System.Nullable<double> _LongitudeRight;
		
		private System.Nullable<bool> _ForceIgnoreTrainDirectionChange;
		
		private System.Nullable<bool> _SuppressAuthorityRelease;
		
		private System.Nullable<bool> _TrackWarrantEnforcementEnabled;
		
		private string _RailroadUniqueIdentifierName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnControlPointChanging(System.Nullable<int> value);
    partial void OnControlPointChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnLXChanging(System.Nullable<short> value);
    partial void OnLXChanged();
    partial void OnLYChanging(System.Nullable<short> value);
    partial void OnLYChanged();
    partial void OnRXChanging(System.Nullable<short> value);
    partial void OnRXChanged();
    partial void OnRYChanging(System.Nullable<short> value);
    partial void OnRYChanged();
    partial void OnLeftLinkChanging(System.Nullable<int> value);
    partial void OnLeftLinkChanged();
    partial void OnRightLinkChanging(System.Nullable<int> value);
    partial void OnRightLinkChanged();
    partial void OnLeftAltLinkChanging(System.Nullable<int> value);
    partial void OnLeftAltLinkChanged();
    partial void OnRightAltLinkChanging(System.Nullable<int> value);
    partial void OnRightAltLinkChanged();
    partial void OnAltLinkOneChanging(System.Nullable<int> value);
    partial void OnAltLinkOneChanged();
    partial void OnAltLinkTwoChanging(System.Nullable<int> value);
    partial void OnAltLinkTwoChanged();
    partial void OnCodelineChanging(System.Nullable<int> value);
    partial void OnCodelineChanged();
    partial void OnPINDChanging(string value);
    partial void OnPINDChanged();
    partial void OnPCTLChanging(string value);
    partial void OnPCTLChanged();
    partial void OnSINDChanging(string value);
    partial void OnSINDChanged();
    partial void OnSCTLChanging(string value);
    partial void OnSCTLChanged();
    partial void OnTINDChanging(string value);
    partial void OnTINDChanged();
    partial void OnTCTLChanging(string value);
    partial void OnTCTLChanged();
    partial void OnLeftLimitRangeChanging(System.Nullable<int> value);
    partial void OnLeftLimitRangeChanged();
    partial void OnRightLimitRangeChanging(System.Nullable<int> value);
    partial void OnRightLimitRangeChanged();
    partial void OnLeftLimitMPRangeChanging(System.Nullable<double> value);
    partial void OnLeftLimitMPRangeChanged();
    partial void OnRightLimitMPRangeChanging(System.Nullable<double> value);
    partial void OnRightLimitMPRangeChanged();
    partial void OnAuthorityTypeChanging(string value);
    partial void OnAuthorityTypeChanged();
    partial void OnTrkNameChanging(string value);
    partial void OnTrkNameChanged();
    partial void OnLeftLimitNameChanging(string value);
    partial void OnLeftLimitNameChanged();
    partial void OnRightLimitNameChanging(string value);
    partial void OnRightLimitNameChanged();
    partial void OnTerritoryAssignmentChanging(System.Nullable<int> value);
    partial void OnTerritoryAssignmentChanged();
    partial void OnSubdivisionChanging(System.Nullable<int> value);
    partial void OnSubdivisionChanged();
    partial void OnSlottingTKChanging(System.Nullable<bool> value);
    partial void OnSlottingTKChanged();
    partial void OnTrackLengthChanging(System.Nullable<int> value);
    partial void OnTrackLengthChanged();
    partial void OnDeviceBlockingChanging(System.Nullable<bool> value);
    partial void OnDeviceBlockingChanged();
    partial void OnFieldBlockingChanging(System.Nullable<bool> value);
    partial void OnFieldBlockingChanged();
    partial void OnFoulTimeChanging(System.Nullable<bool> value);
    partial void OnFoulTimeChanged();
    partial void OnTrackPermitChanging(System.Nullable<bool> value);
    partial void OnTrackPermitChanged();
    partial void OnTrackTimeChanging(System.Nullable<bool> value);
    partial void OnTrackTimeChanged();
    partial void OnTrafficChanging(System.Nullable<bool> value);
    partial void OnTrafficChanged();
    partial void OnFBZChanging(string value);
    partial void OnFBZChanged();
    partial void OnFBKChanging(string value);
    partial void OnFBKChanged();
    partial void OnTimeZoneChanging(string value);
    partial void OnTimeZoneChanged();
    partial void OnTrackLockChanging(System.Nullable<bool> value);
    partial void OnTrackLockChanged();
    partial void OnTrackLockBitChanging(string value);
    partial void OnTrackLockBitChanged();
    partial void OnTrackUIDChanging(System.Nullable<int> value);
    partial void OnTrackUIDChanged();
    partial void OnOSReportingChanging(System.Nullable<bool> value);
    partial void OnOSReportingChanged();
    partial void OnGraphicGroupChanging(System.Nullable<byte> value);
    partial void OnGraphicGroupChanged();
    partial void OnScreenRegionChanging(System.Nullable<byte> value);
    partial void OnScreenRegionChanged();
    partial void OnLossOfShuntChanging(System.Nullable<byte> value);
    partial void OnLossOfShuntChanged();
    partial void OnFBZ2Changing(string value);
    partial void OnFBZ2Changed();
    partial void OnFBK2Changing(string value);
    partial void OnFBK2Changed();
    partial void OnReleaseTrainIDTrackChanging(System.Nullable<bool> value);
    partial void OnReleaseTrainIDTrackChanged();
    partial void OnDisallowTNTOnSplitChanging(System.Nullable<bool> value);
    partial void OnDisallowTNTOnSplitChanged();
    partial void OnBlueFlagChanging(System.Nullable<bool> value);
    partial void OnBlueFlagChanged();
    partial void OnOCSChanging(System.Nullable<bool> value);
    partial void OnOCSChanged();
    partial void OnTrackSpeedsChanging(string value);
    partial void OnTrackSpeedsChanged();
    partial void OnPassRedSignalAlertOffChanging(System.Nullable<bool> value);
    partial void OnPassRedSignalAlertOffChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSlotFieldTrafficChanging(System.Nullable<bool> value);
    partial void OnSlotFieldTrafficChanged();
    partial void OnPTCBlockIDChanging(System.Nullable<int> value);
    partial void OnPTCBlockIDChanged();
    partial void OnRefuseOpposingAuthoritiesFromLeftChanging(System.Nullable<bool> value);
    partial void OnRefuseOpposingAuthoritiesFromLeftChanged();
    partial void OnRefuseOpposingAuthoritiesFromRightChanging(System.Nullable<bool> value);
    partial void OnRefuseOpposingAuthoritiesFromRightChanged();
    partial void OnAllowOpposingAuthorityCreationToLeftChanging(System.Nullable<bool> value);
    partial void OnAllowOpposingAuthorityCreationToLeftChanged();
    partial void OnAllowOpposingAuthorityCreationToRightChanging(System.Nullable<bool> value);
    partial void OnAllowOpposingAuthorityCreationToRightChanged();
    partial void OnHoldingSignalSlottingTrackChanging(System.Nullable<bool> value);
    partial void OnHoldingSignalSlottingTrackChanged();
    partial void OnHoldingSignalOSLeftBoundReportingChanging(System.Nullable<bool> value);
    partial void OnHoldingSignalOSLeftBoundReportingChanged();
    partial void OnHoldingSignalOSRightBoundReportingChanging(System.Nullable<bool> value);
    partial void OnHoldingSignalOSRightBoundReportingChanged();
    partial void OnOverrideLeftTrafficCheckChanging(System.Nullable<bool> value);
    partial void OnOverrideLeftTrafficCheckChanged();
    partial void OnOverrideRightTrafficCheckChanging(System.Nullable<bool> value);
    partial void OnOverrideRightTrafficCheckChanged();
    partial void OnTrackBlockingReferencesChanging(string value);
    partial void OnTrackBlockingReferencesChanged();
    partial void OnMatchModeChanging(System.Nullable<bool> value);
    partial void OnMatchModeChanged();
    partial void OnMilePostSuffixChanging(string value);
    partial void OnMilePostSuffixChanged();
    partial void OnTurnOutTrackChanging(System.Nullable<bool> value);
    partial void OnTurnOutTrackChanged();
    partial void OnAltLinkThreeChanging(System.Nullable<int> value);
    partial void OnAltLinkThreeChanged();
    partial void OnAltLinkFourChanging(System.Nullable<int> value);
    partial void OnAltLinkFourChanged();
    partial void OnHAZMATAlarmingChanging(System.Nullable<bool> value);
    partial void OnHAZMATAlarmingChanged();
    partial void OnFoulingTrackSPMSChanging(System.Nullable<bool> value);
    partial void OnFoulingTrackSPMSChanged();
    partial void OnRouteNameChanging(string value);
    partial void OnRouteNameChanged();
    partial void OnRouteBlockingChanging(System.Nullable<bool> value);
    partial void OnRouteBlockingChanged();
    partial void OnTrackIntegrityZoneChanging(System.Nullable<bool> value);
    partial void OnTrackIntegrityZoneChanged();
    partial void OnTrackIntegrityZoneUIDChanging(System.Nullable<int> value);
    partial void OnTrackIntegrityZoneUIDChanged();
    partial void OnTrackIntegrityZoneNameChanging(string value);
    partial void OnTrackIntegrityZoneNameChanged();
    partial void OnTIZMonitorModeTimeOutChanging(System.Nullable<int> value);
    partial void OnTIZMonitorModeTimeOutChanged();
    partial void OnAuthorityConfirmationRequiredChanging(System.Nullable<bool> value);
    partial void OnAuthorityConfirmationRequiredChanged();
    partial void OnAlternateTrackNamesChanging(string value);
    partial void OnAlternateTrackNamesChanged();
    partial void OnAlternateTrackAbbreviationChanging(string value);
    partial void OnAlternateTrackAbbreviationChanged();
    partial void OnAllowMainTrackEntranceChanging(System.Nullable<bool> value);
    partial void OnAllowMainTrackEntranceChanged();
    partial void OnMainTrackEntrancePointsChanging(string value);
    partial void OnMainTrackEntrancePointsChanged();
    partial void OnAllowForceOperationsToTWCChanging(System.Nullable<bool> value);
    partial void OnAllowForceOperationsToTWCChanged();
    partial void OnEnableAbsolutePermissiveBlockChanging(System.Nullable<bool> value);
    partial void OnEnableAbsolutePermissiveBlockChanged();
    partial void OnAbsolutePermissiveBlockPTCUIDChanging(System.Nullable<int> value);
    partial void OnAbsolutePermissiveBlockPTCUIDChanged();
    partial void OnLineSegmentGroupUIDChanging(string value);
    partial void OnLineSegmentGroupUIDChanged();
    partial void OnDerailmentDetectorEnabledChanging(System.Nullable<bool> value);
    partial void OnDerailmentDetectorEnabledChanged();
    partial void OnDerailmentDetectorIndBitChanging(string value);
    partial void OnDerailmentDetectorIndBitChanged();
    partial void OnDerailmentDetectorCtlBitChanging(string value);
    partial void OnDerailmentDetectorCtlBitChanged();
    partial void OnDerailmentDetectorInhibitedChanging(System.Nullable<bool> value);
    partial void OnDerailmentDetectorInhibitedChanged();
    partial void OnMilepostPrefixChanging(string value);
    partial void OnMilepostPrefixChanged();
    partial void OnAdditionalReferenceUIDChanging(string value);
    partial void OnAdditionalReferenceUIDChanged();
    partial void OnEnablePositionReportingChanging(System.Nullable<bool> value);
    partial void OnEnablePositionReportingChanged();
    partial void OnTrackNameAliasChanging(string value);
    partial void OnTrackNameAliasChanged();
    partial void OnEnableNonControlledSidingChanging(System.Nullable<bool> value);
    partial void OnEnableNonControlledSidingChanged();
    partial void OnEnableControlledSidingChanging(System.Nullable<bool> value);
    partial void OnEnableControlledSidingChanged();
    partial void OnDisallowLeftSignalRequestOnOccupancyChanging(System.Nullable<bool> value);
    partial void OnDisallowLeftSignalRequestOnOccupancyChanged();
    partial void OnDisallowRightSignalRequestOnOccupancyChanging(System.Nullable<bool> value);
    partial void OnDisallowRightSignalRequestOnOccupancyChanged();
    partial void OnTrackSpeedAverageChanging(System.Nullable<int> value);
    partial void OnTrackSpeedAverageChanged();
    partial void OnTrackSpeedMaximumChanging(System.Nullable<int> value);
    partial void OnTrackSpeedMaximumChanged();
    partial void OnTrackElevationAverageChanging(System.Nullable<double> value);
    partial void OnTrackElevationAverageChanged();
    partial void OnTrackElevationMaximumChanging(System.Nullable<double> value);
    partial void OnTrackElevationMaximumChanged();
    partial void OnTrackElevationAscendingChanging(System.Nullable<bool> value);
    partial void OnTrackElevationAscendingChanged();
    partial void OnTrackSpeedMaximumFreightChanging(System.Nullable<int> value);
    partial void OnTrackSpeedMaximumFreightChanged();
    partial void OnTrackSpeedMaximumPassengarChanging(System.Nullable<int> value);
    partial void OnTrackSpeedMaximumPassengarChanged();
    partial void OnQINDChanging(string value);
    partial void OnQINDChanged();
    partial void OnQCTLChanging(string value);
    partial void OnQCTLChanged();
    partial void OnPTCTrackTypeChanging(string value);
    partial void OnPTCTrackTypeChanged();
    partial void OnJointControlChanging(System.Nullable<bool> value);
    partial void OnJointControlChanged();
    partial void OnTMPSEnabledChanging(System.Nullable<bool> value);
    partial void OnTMPSEnabledChanged();
    partial void OnTMPSCircuitNameChanging(string value);
    partial void OnTMPSCircuitNameChanged();
    partial void OnTMPSLinkLeftChanging(System.Nullable<int> value);
    partial void OnTMPSLinkLeftChanged();
    partial void OnTMPSLinkRightChanging(System.Nullable<int> value);
    partial void OnTMPSLinkRightChanged();
    partial void OnTMPSLinkAlt1Changing(System.Nullable<int> value);
    partial void OnTMPSLinkAlt1Changed();
    partial void OnTMPSLinkAlt2Changing(System.Nullable<int> value);
    partial void OnTMPSLinkAlt2Changed();
    partial void OnTMPSLinkAlt3Changing(System.Nullable<int> value);
    partial void OnTMPSLinkAlt3Changed();
    partial void OnTMPSLinkAlt4Changing(System.Nullable<int> value);
    partial void OnTMPSLinkAlt4Changed();
    partial void OnLatitudeLeftChanging(System.Nullable<double> value);
    partial void OnLatitudeLeftChanged();
    partial void OnLongitudeLeftChanging(System.Nullable<double> value);
    partial void OnLongitudeLeftChanged();
    partial void OnLatitudeRightChanging(System.Nullable<double> value);
    partial void OnLatitudeRightChanged();
    partial void OnLongitudeRightChanging(System.Nullable<double> value);
    partial void OnLongitudeRightChanged();
    partial void OnForceIgnoreTrainDirectionChangeChanging(System.Nullable<bool> value);
    partial void OnForceIgnoreTrainDirectionChangeChanged();
    partial void OnSuppressAuthorityReleaseChanging(System.Nullable<bool> value);
    partial void OnSuppressAuthorityReleaseChanged();
    partial void OnTrackWarrantEnforcementEnabledChanging(System.Nullable<bool> value);
    partial void OnTrackWarrantEnforcementEnabledChanged();
    partial void OnRailroadUniqueIdentifierNameChanging(string value);
    partial void OnRailroadUniqueIdentifierNameChanged();
    #endregion
		
		public tblCompTrack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="Int")]
		public System.Nullable<int> ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this.OnControlPointChanging(value);
					this.SendPropertyChanging();
					this._ControlPoint = value;
					this.SendPropertyChanged("ControlPoint");
					this.OnControlPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LX", DbType="SmallInt")]
		public System.Nullable<short> LX
		{
			get
			{
				return this._LX;
			}
			set
			{
				if ((this._LX != value))
				{
					this.OnLXChanging(value);
					this.SendPropertyChanging();
					this._LX = value;
					this.SendPropertyChanged("LX");
					this.OnLXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LY", DbType="SmallInt")]
		public System.Nullable<short> LY
		{
			get
			{
				return this._LY;
			}
			set
			{
				if ((this._LY != value))
				{
					this.OnLYChanging(value);
					this.SendPropertyChanging();
					this._LY = value;
					this.SendPropertyChanged("LY");
					this.OnLYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RX", DbType="SmallInt")]
		public System.Nullable<short> RX
		{
			get
			{
				return this._RX;
			}
			set
			{
				if ((this._RX != value))
				{
					this.OnRXChanging(value);
					this.SendPropertyChanging();
					this._RX = value;
					this.SendPropertyChanged("RX");
					this.OnRXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RY", DbType="SmallInt")]
		public System.Nullable<short> RY
		{
			get
			{
				return this._RY;
			}
			set
			{
				if ((this._RY != value))
				{
					this.OnRYChanging(value);
					this.SendPropertyChanging();
					this._RY = value;
					this.SendPropertyChanged("RY");
					this.OnRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftLink", DbType="Int")]
		public System.Nullable<int> LeftLink
		{
			get
			{
				return this._LeftLink;
			}
			set
			{
				if ((this._LeftLink != value))
				{
					this.OnLeftLinkChanging(value);
					this.SendPropertyChanging();
					this._LeftLink = value;
					this.SendPropertyChanged("LeftLink");
					this.OnLeftLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightLink", DbType="Int")]
		public System.Nullable<int> RightLink
		{
			get
			{
				return this._RightLink;
			}
			set
			{
				if ((this._RightLink != value))
				{
					this.OnRightLinkChanging(value);
					this.SendPropertyChanging();
					this._RightLink = value;
					this.SendPropertyChanged("RightLink");
					this.OnRightLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftAltLink", DbType="Int")]
		public System.Nullable<int> LeftAltLink
		{
			get
			{
				return this._LeftAltLink;
			}
			set
			{
				if ((this._LeftAltLink != value))
				{
					this.OnLeftAltLinkChanging(value);
					this.SendPropertyChanging();
					this._LeftAltLink = value;
					this.SendPropertyChanged("LeftAltLink");
					this.OnLeftAltLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightAltLink", DbType="Int")]
		public System.Nullable<int> RightAltLink
		{
			get
			{
				return this._RightAltLink;
			}
			set
			{
				if ((this._RightAltLink != value))
				{
					this.OnRightAltLinkChanging(value);
					this.SendPropertyChanging();
					this._RightAltLink = value;
					this.SendPropertyChanged("RightAltLink");
					this.OnRightAltLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltLinkOne", DbType="Int")]
		public System.Nullable<int> AltLinkOne
		{
			get
			{
				return this._AltLinkOne;
			}
			set
			{
				if ((this._AltLinkOne != value))
				{
					this.OnAltLinkOneChanging(value);
					this.SendPropertyChanging();
					this._AltLinkOne = value;
					this.SendPropertyChanged("AltLinkOne");
					this.OnAltLinkOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltLinkTwo", DbType="Int")]
		public System.Nullable<int> AltLinkTwo
		{
			get
			{
				return this._AltLinkTwo;
			}
			set
			{
				if ((this._AltLinkTwo != value))
				{
					this.OnAltLinkTwoChanging(value);
					this.SendPropertyChanging();
					this._AltLinkTwo = value;
					this.SendPropertyChanged("AltLinkTwo");
					this.OnAltLinkTwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codeline", DbType="Int")]
		public System.Nullable<int> Codeline
		{
			get
			{
				return this._Codeline;
			}
			set
			{
				if ((this._Codeline != value))
				{
					this.OnCodelineChanging(value);
					this.SendPropertyChanging();
					this._Codeline = value;
					this.SendPropertyChanged("Codeline");
					this.OnCodelineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIND", DbType="NVarChar(50)")]
		public string PIND
		{
			get
			{
				return this._PIND;
			}
			set
			{
				if ((this._PIND != value))
				{
					this.OnPINDChanging(value);
					this.SendPropertyChanging();
					this._PIND = value;
					this.SendPropertyChanged("PIND");
					this.OnPINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCTL", DbType="NVarChar(50)")]
		public string PCTL
		{
			get
			{
				return this._PCTL;
			}
			set
			{
				if ((this._PCTL != value))
				{
					this.OnPCTLChanging(value);
					this.SendPropertyChanging();
					this._PCTL = value;
					this.SendPropertyChanged("PCTL");
					this.OnPCTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIND", DbType="NVarChar(50)")]
		public string SIND
		{
			get
			{
				return this._SIND;
			}
			set
			{
				if ((this._SIND != value))
				{
					this.OnSINDChanging(value);
					this.SendPropertyChanging();
					this._SIND = value;
					this.SendPropertyChanged("SIND");
					this.OnSINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCTL", DbType="NVarChar(50)")]
		public string SCTL
		{
			get
			{
				return this._SCTL;
			}
			set
			{
				if ((this._SCTL != value))
				{
					this.OnSCTLChanging(value);
					this.SendPropertyChanging();
					this._SCTL = value;
					this.SendPropertyChanged("SCTL");
					this.OnSCTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIND", DbType="NVarChar(50)")]
		public string TIND
		{
			get
			{
				return this._TIND;
			}
			set
			{
				if ((this._TIND != value))
				{
					this.OnTINDChanging(value);
					this.SendPropertyChanging();
					this._TIND = value;
					this.SendPropertyChanged("TIND");
					this.OnTINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCTL", DbType="NVarChar(50)")]
		public string TCTL
		{
			get
			{
				return this._TCTL;
			}
			set
			{
				if ((this._TCTL != value))
				{
					this.OnTCTLChanging(value);
					this.SendPropertyChanging();
					this._TCTL = value;
					this.SendPropertyChanged("TCTL");
					this.OnTCTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftLimitRange", DbType="Int")]
		public System.Nullable<int> LeftLimitRange
		{
			get
			{
				return this._LeftLimitRange;
			}
			set
			{
				if ((this._LeftLimitRange != value))
				{
					this.OnLeftLimitRangeChanging(value);
					this.SendPropertyChanging();
					this._LeftLimitRange = value;
					this.SendPropertyChanged("LeftLimitRange");
					this.OnLeftLimitRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightLimitRange", DbType="Int")]
		public System.Nullable<int> RightLimitRange
		{
			get
			{
				return this._RightLimitRange;
			}
			set
			{
				if ((this._RightLimitRange != value))
				{
					this.OnRightLimitRangeChanging(value);
					this.SendPropertyChanging();
					this._RightLimitRange = value;
					this.SendPropertyChanged("RightLimitRange");
					this.OnRightLimitRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftLimitMPRange", DbType="Float")]
		public System.Nullable<double> LeftLimitMPRange
		{
			get
			{
				return this._LeftLimitMPRange;
			}
			set
			{
				if ((this._LeftLimitMPRange != value))
				{
					this.OnLeftLimitMPRangeChanging(value);
					this.SendPropertyChanging();
					this._LeftLimitMPRange = value;
					this.SendPropertyChanged("LeftLimitMPRange");
					this.OnLeftLimitMPRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightLimitMPRange", DbType="Float")]
		public System.Nullable<double> RightLimitMPRange
		{
			get
			{
				return this._RightLimitMPRange;
			}
			set
			{
				if ((this._RightLimitMPRange != value))
				{
					this.OnRightLimitMPRangeChanging(value);
					this.SendPropertyChanging();
					this._RightLimitMPRange = value;
					this.SendPropertyChanged("RightLimitMPRange");
					this.OnRightLimitMPRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityType", DbType="NVarChar(10)")]
		public string AuthorityType
		{
			get
			{
				return this._AuthorityType;
			}
			set
			{
				if ((this._AuthorityType != value))
				{
					this.OnAuthorityTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthorityType = value;
					this.SendPropertyChanged("AuthorityType");
					this.OnAuthorityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrkName", DbType="NVarChar(20)")]
		public string TrkName
		{
			get
			{
				return this._TrkName;
			}
			set
			{
				if ((this._TrkName != value))
				{
					this.OnTrkNameChanging(value);
					this.SendPropertyChanging();
					this._TrkName = value;
					this.SendPropertyChanged("TrkName");
					this.OnTrkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftLimitName", DbType="NVarChar(50)")]
		public string LeftLimitName
		{
			get
			{
				return this._LeftLimitName;
			}
			set
			{
				if ((this._LeftLimitName != value))
				{
					this.OnLeftLimitNameChanging(value);
					this.SendPropertyChanging();
					this._LeftLimitName = value;
					this.SendPropertyChanged("LeftLimitName");
					this.OnLeftLimitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightLimitName", DbType="NVarChar(50)")]
		public string RightLimitName
		{
			get
			{
				return this._RightLimitName;
			}
			set
			{
				if ((this._RightLimitName != value))
				{
					this.OnRightLimitNameChanging(value);
					this.SendPropertyChanging();
					this._RightLimitName = value;
					this.SendPropertyChanged("RightLimitName");
					this.OnRightLimitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryAssignment", DbType="Int")]
		public System.Nullable<int> TerritoryAssignment
		{
			get
			{
				return this._TerritoryAssignment;
			}
			set
			{
				if ((this._TerritoryAssignment != value))
				{
					this.OnTerritoryAssignmentChanging(value);
					this.SendPropertyChanging();
					this._TerritoryAssignment = value;
					this.SendPropertyChanged("TerritoryAssignment");
					this.OnTerritoryAssignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subdivision", DbType="Int")]
		public System.Nullable<int> Subdivision
		{
			get
			{
				return this._Subdivision;
			}
			set
			{
				if ((this._Subdivision != value))
				{
					this.OnSubdivisionChanging(value);
					this.SendPropertyChanging();
					this._Subdivision = value;
					this.SendPropertyChanged("Subdivision");
					this.OnSubdivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlottingTK", DbType="Bit")]
		public System.Nullable<bool> SlottingTK
		{
			get
			{
				return this._SlottingTK;
			}
			set
			{
				if ((this._SlottingTK != value))
				{
					this.OnSlottingTKChanging(value);
					this.SendPropertyChanging();
					this._SlottingTK = value;
					this.SendPropertyChanged("SlottingTK");
					this.OnSlottingTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackLength", DbType="Int")]
		public System.Nullable<int> TrackLength
		{
			get
			{
				return this._TrackLength;
			}
			set
			{
				if ((this._TrackLength != value))
				{
					this.OnTrackLengthChanging(value);
					this.SendPropertyChanging();
					this._TrackLength = value;
					this.SendPropertyChanged("TrackLength");
					this.OnTrackLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceBlocking", DbType="Bit")]
		public System.Nullable<bool> DeviceBlocking
		{
			get
			{
				return this._DeviceBlocking;
			}
			set
			{
				if ((this._DeviceBlocking != value))
				{
					this.OnDeviceBlockingChanging(value);
					this.SendPropertyChanging();
					this._DeviceBlocking = value;
					this.SendPropertyChanged("DeviceBlocking");
					this.OnDeviceBlockingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldBlocking", DbType="Bit")]
		public System.Nullable<bool> FieldBlocking
		{
			get
			{
				return this._FieldBlocking;
			}
			set
			{
				if ((this._FieldBlocking != value))
				{
					this.OnFieldBlockingChanging(value);
					this.SendPropertyChanging();
					this._FieldBlocking = value;
					this.SendPropertyChanged("FieldBlocking");
					this.OnFieldBlockingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoulTime", DbType="Bit")]
		public System.Nullable<bool> FoulTime
		{
			get
			{
				return this._FoulTime;
			}
			set
			{
				if ((this._FoulTime != value))
				{
					this.OnFoulTimeChanging(value);
					this.SendPropertyChanging();
					this._FoulTime = value;
					this.SendPropertyChanged("FoulTime");
					this.OnFoulTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackPermit", DbType="Bit")]
		public System.Nullable<bool> TrackPermit
		{
			get
			{
				return this._TrackPermit;
			}
			set
			{
				if ((this._TrackPermit != value))
				{
					this.OnTrackPermitChanging(value);
					this.SendPropertyChanging();
					this._TrackPermit = value;
					this.SendPropertyChanged("TrackPermit");
					this.OnTrackPermitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackTime", DbType="Bit")]
		public System.Nullable<bool> TrackTime
		{
			get
			{
				return this._TrackTime;
			}
			set
			{
				if ((this._TrackTime != value))
				{
					this.OnTrackTimeChanging(value);
					this.SendPropertyChanging();
					this._TrackTime = value;
					this.SendPropertyChanged("TrackTime");
					this.OnTrackTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traffic", DbType="Bit")]
		public System.Nullable<bool> Traffic
		{
			get
			{
				return this._Traffic;
			}
			set
			{
				if ((this._Traffic != value))
				{
					this.OnTrafficChanging(value);
					this.SendPropertyChanging();
					this._Traffic = value;
					this.SendPropertyChanged("Traffic");
					this.OnTrafficChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBZ", DbType="NVarChar(50)")]
		public string FBZ
		{
			get
			{
				return this._FBZ;
			}
			set
			{
				if ((this._FBZ != value))
				{
					this.OnFBZChanging(value);
					this.SendPropertyChanging();
					this._FBZ = value;
					this.SendPropertyChanged("FBZ");
					this.OnFBZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBK", DbType="NVarChar(50)")]
		public string FBK
		{
			get
			{
				return this._FBK;
			}
			set
			{
				if ((this._FBK != value))
				{
					this.OnFBKChanging(value);
					this.SendPropertyChanging();
					this._FBK = value;
					this.SendPropertyChanged("FBK");
					this.OnFBKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="NVarChar(15)")]
		public string TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackLock", DbType="Bit")]
		public System.Nullable<bool> TrackLock
		{
			get
			{
				return this._TrackLock;
			}
			set
			{
				if ((this._TrackLock != value))
				{
					this.OnTrackLockChanging(value);
					this.SendPropertyChanging();
					this._TrackLock = value;
					this.SendPropertyChanged("TrackLock");
					this.OnTrackLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackLockBit", DbType="NVarChar(50)")]
		public string TrackLockBit
		{
			get
			{
				return this._TrackLockBit;
			}
			set
			{
				if ((this._TrackLockBit != value))
				{
					this.OnTrackLockBitChanging(value);
					this.SendPropertyChanging();
					this._TrackLockBit = value;
					this.SendPropertyChanged("TrackLockBit");
					this.OnTrackLockBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackUID", DbType="Int")]
		public System.Nullable<int> TrackUID
		{
			get
			{
				return this._TrackUID;
			}
			set
			{
				if ((this._TrackUID != value))
				{
					this.OnTrackUIDChanging(value);
					this.SendPropertyChanging();
					this._TrackUID = value;
					this.SendPropertyChanged("TrackUID");
					this.OnTrackUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSReporting", DbType="Bit")]
		public System.Nullable<bool> OSReporting
		{
			get
			{
				return this._OSReporting;
			}
			set
			{
				if ((this._OSReporting != value))
				{
					this.OnOSReportingChanging(value);
					this.SendPropertyChanging();
					this._OSReporting = value;
					this.SendPropertyChanged("OSReporting");
					this.OnOSReportingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraphicGroup", DbType="TinyInt")]
		public System.Nullable<byte> GraphicGroup
		{
			get
			{
				return this._GraphicGroup;
			}
			set
			{
				if ((this._GraphicGroup != value))
				{
					this.OnGraphicGroupChanging(value);
					this.SendPropertyChanging();
					this._GraphicGroup = value;
					this.SendPropertyChanged("GraphicGroup");
					this.OnGraphicGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenRegion", DbType="TinyInt")]
		public System.Nullable<byte> ScreenRegion
		{
			get
			{
				return this._ScreenRegion;
			}
			set
			{
				if ((this._ScreenRegion != value))
				{
					this.OnScreenRegionChanging(value);
					this.SendPropertyChanging();
					this._ScreenRegion = value;
					this.SendPropertyChanged("ScreenRegion");
					this.OnScreenRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossOfShunt", DbType="TinyInt")]
		public System.Nullable<byte> LossOfShunt
		{
			get
			{
				return this._LossOfShunt;
			}
			set
			{
				if ((this._LossOfShunt != value))
				{
					this.OnLossOfShuntChanging(value);
					this.SendPropertyChanging();
					this._LossOfShunt = value;
					this.SendPropertyChanged("LossOfShunt");
					this.OnLossOfShuntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBZ2", DbType="NVarChar(50)")]
		public string FBZ2
		{
			get
			{
				return this._FBZ2;
			}
			set
			{
				if ((this._FBZ2 != value))
				{
					this.OnFBZ2Changing(value);
					this.SendPropertyChanging();
					this._FBZ2 = value;
					this.SendPropertyChanged("FBZ2");
					this.OnFBZ2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBK2", DbType="NVarChar(50)")]
		public string FBK2
		{
			get
			{
				return this._FBK2;
			}
			set
			{
				if ((this._FBK2 != value))
				{
					this.OnFBK2Changing(value);
					this.SendPropertyChanging();
					this._FBK2 = value;
					this.SendPropertyChanged("FBK2");
					this.OnFBK2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseTrainIDTrack", DbType="Bit")]
		public System.Nullable<bool> ReleaseTrainIDTrack
		{
			get
			{
				return this._ReleaseTrainIDTrack;
			}
			set
			{
				if ((this._ReleaseTrainIDTrack != value))
				{
					this.OnReleaseTrainIDTrackChanging(value);
					this.SendPropertyChanging();
					this._ReleaseTrainIDTrack = value;
					this.SendPropertyChanged("ReleaseTrainIDTrack");
					this.OnReleaseTrainIDTrackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisallowTNTOnSplit", DbType="Bit")]
		public System.Nullable<bool> DisallowTNTOnSplit
		{
			get
			{
				return this._DisallowTNTOnSplit;
			}
			set
			{
				if ((this._DisallowTNTOnSplit != value))
				{
					this.OnDisallowTNTOnSplitChanging(value);
					this.SendPropertyChanging();
					this._DisallowTNTOnSplit = value;
					this.SendPropertyChanged("DisallowTNTOnSplit");
					this.OnDisallowTNTOnSplitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlueFlag", DbType="Bit")]
		public System.Nullable<bool> BlueFlag
		{
			get
			{
				return this._BlueFlag;
			}
			set
			{
				if ((this._BlueFlag != value))
				{
					this.OnBlueFlagChanging(value);
					this.SendPropertyChanging();
					this._BlueFlag = value;
					this.SendPropertyChanged("BlueFlag");
					this.OnBlueFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OCS", DbType="Bit")]
		public System.Nullable<bool> OCS
		{
			get
			{
				return this._OCS;
			}
			set
			{
				if ((this._OCS != value))
				{
					this.OnOCSChanging(value);
					this.SendPropertyChanging();
					this._OCS = value;
					this.SendPropertyChanged("OCS");
					this.OnOCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackSpeeds", DbType="NVarChar(50)")]
		public string TrackSpeeds
		{
			get
			{
				return this._TrackSpeeds;
			}
			set
			{
				if ((this._TrackSpeeds != value))
				{
					this.OnTrackSpeedsChanging(value);
					this.SendPropertyChanging();
					this._TrackSpeeds = value;
					this.SendPropertyChanged("TrackSpeeds");
					this.OnTrackSpeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassRedSignalAlertOff", DbType="Bit")]
		public System.Nullable<bool> PassRedSignalAlertOff
		{
			get
			{
				return this._PassRedSignalAlertOff;
			}
			set
			{
				if ((this._PassRedSignalAlertOff != value))
				{
					this.OnPassRedSignalAlertOffChanging(value);
					this.SendPropertyChanging();
					this._PassRedSignalAlertOff = value;
					this.SendPropertyChanged("PassRedSignalAlertOff");
					this.OnPassRedSignalAlertOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotFieldTraffic", DbType="Bit")]
		public System.Nullable<bool> SlotFieldTraffic
		{
			get
			{
				return this._SlotFieldTraffic;
			}
			set
			{
				if ((this._SlotFieldTraffic != value))
				{
					this.OnSlotFieldTrafficChanging(value);
					this.SendPropertyChanging();
					this._SlotFieldTraffic = value;
					this.SendPropertyChanged("SlotFieldTraffic");
					this.OnSlotFieldTrafficChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTCBlockID", DbType="Int")]
		public System.Nullable<int> PTCBlockID
		{
			get
			{
				return this._PTCBlockID;
			}
			set
			{
				if ((this._PTCBlockID != value))
				{
					this.OnPTCBlockIDChanging(value);
					this.SendPropertyChanging();
					this._PTCBlockID = value;
					this.SendPropertyChanged("PTCBlockID");
					this.OnPTCBlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefuseOpposingAuthoritiesFromLeft", DbType="Bit")]
		public System.Nullable<bool> RefuseOpposingAuthoritiesFromLeft
		{
			get
			{
				return this._RefuseOpposingAuthoritiesFromLeft;
			}
			set
			{
				if ((this._RefuseOpposingAuthoritiesFromLeft != value))
				{
					this.OnRefuseOpposingAuthoritiesFromLeftChanging(value);
					this.SendPropertyChanging();
					this._RefuseOpposingAuthoritiesFromLeft = value;
					this.SendPropertyChanged("RefuseOpposingAuthoritiesFromLeft");
					this.OnRefuseOpposingAuthoritiesFromLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefuseOpposingAuthoritiesFromRight", DbType="Bit")]
		public System.Nullable<bool> RefuseOpposingAuthoritiesFromRight
		{
			get
			{
				return this._RefuseOpposingAuthoritiesFromRight;
			}
			set
			{
				if ((this._RefuseOpposingAuthoritiesFromRight != value))
				{
					this.OnRefuseOpposingAuthoritiesFromRightChanging(value);
					this.SendPropertyChanging();
					this._RefuseOpposingAuthoritiesFromRight = value;
					this.SendPropertyChanged("RefuseOpposingAuthoritiesFromRight");
					this.OnRefuseOpposingAuthoritiesFromRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOpposingAuthorityCreationToLeft", DbType="Bit")]
		public System.Nullable<bool> AllowOpposingAuthorityCreationToLeft
		{
			get
			{
				return this._AllowOpposingAuthorityCreationToLeft;
			}
			set
			{
				if ((this._AllowOpposingAuthorityCreationToLeft != value))
				{
					this.OnAllowOpposingAuthorityCreationToLeftChanging(value);
					this.SendPropertyChanging();
					this._AllowOpposingAuthorityCreationToLeft = value;
					this.SendPropertyChanged("AllowOpposingAuthorityCreationToLeft");
					this.OnAllowOpposingAuthorityCreationToLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOpposingAuthorityCreationToRight", DbType="Bit")]
		public System.Nullable<bool> AllowOpposingAuthorityCreationToRight
		{
			get
			{
				return this._AllowOpposingAuthorityCreationToRight;
			}
			set
			{
				if ((this._AllowOpposingAuthorityCreationToRight != value))
				{
					this.OnAllowOpposingAuthorityCreationToRightChanging(value);
					this.SendPropertyChanging();
					this._AllowOpposingAuthorityCreationToRight = value;
					this.SendPropertyChanged("AllowOpposingAuthorityCreationToRight");
					this.OnAllowOpposingAuthorityCreationToRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoldingSignalSlottingTrack", DbType="Bit")]
		public System.Nullable<bool> HoldingSignalSlottingTrack
		{
			get
			{
				return this._HoldingSignalSlottingTrack;
			}
			set
			{
				if ((this._HoldingSignalSlottingTrack != value))
				{
					this.OnHoldingSignalSlottingTrackChanging(value);
					this.SendPropertyChanging();
					this._HoldingSignalSlottingTrack = value;
					this.SendPropertyChanged("HoldingSignalSlottingTrack");
					this.OnHoldingSignalSlottingTrackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoldingSignalOSLeftBoundReporting", DbType="Bit")]
		public System.Nullable<bool> HoldingSignalOSLeftBoundReporting
		{
			get
			{
				return this._HoldingSignalOSLeftBoundReporting;
			}
			set
			{
				if ((this._HoldingSignalOSLeftBoundReporting != value))
				{
					this.OnHoldingSignalOSLeftBoundReportingChanging(value);
					this.SendPropertyChanging();
					this._HoldingSignalOSLeftBoundReporting = value;
					this.SendPropertyChanged("HoldingSignalOSLeftBoundReporting");
					this.OnHoldingSignalOSLeftBoundReportingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoldingSignalOSRightBoundReporting", DbType="Bit")]
		public System.Nullable<bool> HoldingSignalOSRightBoundReporting
		{
			get
			{
				return this._HoldingSignalOSRightBoundReporting;
			}
			set
			{
				if ((this._HoldingSignalOSRightBoundReporting != value))
				{
					this.OnHoldingSignalOSRightBoundReportingChanging(value);
					this.SendPropertyChanging();
					this._HoldingSignalOSRightBoundReporting = value;
					this.SendPropertyChanged("HoldingSignalOSRightBoundReporting");
					this.OnHoldingSignalOSRightBoundReportingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideLeftTrafficCheck", DbType="Bit")]
		public System.Nullable<bool> OverrideLeftTrafficCheck
		{
			get
			{
				return this._OverrideLeftTrafficCheck;
			}
			set
			{
				if ((this._OverrideLeftTrafficCheck != value))
				{
					this.OnOverrideLeftTrafficCheckChanging(value);
					this.SendPropertyChanging();
					this._OverrideLeftTrafficCheck = value;
					this.SendPropertyChanged("OverrideLeftTrafficCheck");
					this.OnOverrideLeftTrafficCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverrideRightTrafficCheck", DbType="Bit")]
		public System.Nullable<bool> OverrideRightTrafficCheck
		{
			get
			{
				return this._OverrideRightTrafficCheck;
			}
			set
			{
				if ((this._OverrideRightTrafficCheck != value))
				{
					this.OnOverrideRightTrafficCheckChanging(value);
					this.SendPropertyChanging();
					this._OverrideRightTrafficCheck = value;
					this.SendPropertyChanged("OverrideRightTrafficCheck");
					this.OnOverrideRightTrafficCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackBlockingReferences", DbType="NVarChar(250)")]
		public string TrackBlockingReferences
		{
			get
			{
				return this._TrackBlockingReferences;
			}
			set
			{
				if ((this._TrackBlockingReferences != value))
				{
					this.OnTrackBlockingReferencesChanging(value);
					this.SendPropertyChanging();
					this._TrackBlockingReferences = value;
					this.SendPropertyChanged("TrackBlockingReferences");
					this.OnTrackBlockingReferencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchMode", DbType="Bit")]
		public System.Nullable<bool> MatchMode
		{
			get
			{
				return this._MatchMode;
			}
			set
			{
				if ((this._MatchMode != value))
				{
					this.OnMatchModeChanging(value);
					this.SendPropertyChanging();
					this._MatchMode = value;
					this.SendPropertyChanged("MatchMode");
					this.OnMatchModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilePostSuffix", DbType="NVarChar(1)")]
		public string MilePostSuffix
		{
			get
			{
				return this._MilePostSuffix;
			}
			set
			{
				if ((this._MilePostSuffix != value))
				{
					this.OnMilePostSuffixChanging(value);
					this.SendPropertyChanging();
					this._MilePostSuffix = value;
					this.SendPropertyChanged("MilePostSuffix");
					this.OnMilePostSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnOutTrack", DbType="Bit")]
		public System.Nullable<bool> TurnOutTrack
		{
			get
			{
				return this._TurnOutTrack;
			}
			set
			{
				if ((this._TurnOutTrack != value))
				{
					this.OnTurnOutTrackChanging(value);
					this.SendPropertyChanging();
					this._TurnOutTrack = value;
					this.SendPropertyChanged("TurnOutTrack");
					this.OnTurnOutTrackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltLinkThree", DbType="Int")]
		public System.Nullable<int> AltLinkThree
		{
			get
			{
				return this._AltLinkThree;
			}
			set
			{
				if ((this._AltLinkThree != value))
				{
					this.OnAltLinkThreeChanging(value);
					this.SendPropertyChanging();
					this._AltLinkThree = value;
					this.SendPropertyChanged("AltLinkThree");
					this.OnAltLinkThreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltLinkFour", DbType="Int")]
		public System.Nullable<int> AltLinkFour
		{
			get
			{
				return this._AltLinkFour;
			}
			set
			{
				if ((this._AltLinkFour != value))
				{
					this.OnAltLinkFourChanging(value);
					this.SendPropertyChanging();
					this._AltLinkFour = value;
					this.SendPropertyChanged("AltLinkFour");
					this.OnAltLinkFourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HAZMATAlarming", DbType="Bit")]
		public System.Nullable<bool> HAZMATAlarming
		{
			get
			{
				return this._HAZMATAlarming;
			}
			set
			{
				if ((this._HAZMATAlarming != value))
				{
					this.OnHAZMATAlarmingChanging(value);
					this.SendPropertyChanging();
					this._HAZMATAlarming = value;
					this.SendPropertyChanged("HAZMATAlarming");
					this.OnHAZMATAlarmingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoulingTrackSPMS", DbType="Bit")]
		public System.Nullable<bool> FoulingTrackSPMS
		{
			get
			{
				return this._FoulingTrackSPMS;
			}
			set
			{
				if ((this._FoulingTrackSPMS != value))
				{
					this.OnFoulingTrackSPMSChanging(value);
					this.SendPropertyChanging();
					this._FoulingTrackSPMS = value;
					this.SendPropertyChanged("FoulingTrackSPMS");
					this.OnFoulingTrackSPMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteName", DbType="NVarChar(50)")]
		public string RouteName
		{
			get
			{
				return this._RouteName;
			}
			set
			{
				if ((this._RouteName != value))
				{
					this.OnRouteNameChanging(value);
					this.SendPropertyChanging();
					this._RouteName = value;
					this.SendPropertyChanged("RouteName");
					this.OnRouteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteBlocking", DbType="Bit")]
		public System.Nullable<bool> RouteBlocking
		{
			get
			{
				return this._RouteBlocking;
			}
			set
			{
				if ((this._RouteBlocking != value))
				{
					this.OnRouteBlockingChanging(value);
					this.SendPropertyChanging();
					this._RouteBlocking = value;
					this.SendPropertyChanged("RouteBlocking");
					this.OnRouteBlockingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackIntegrityZone", DbType="Bit")]
		public System.Nullable<bool> TrackIntegrityZone
		{
			get
			{
				return this._TrackIntegrityZone;
			}
			set
			{
				if ((this._TrackIntegrityZone != value))
				{
					this.OnTrackIntegrityZoneChanging(value);
					this.SendPropertyChanging();
					this._TrackIntegrityZone = value;
					this.SendPropertyChanged("TrackIntegrityZone");
					this.OnTrackIntegrityZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackIntegrityZoneUID", DbType="Int")]
		public System.Nullable<int> TrackIntegrityZoneUID
		{
			get
			{
				return this._TrackIntegrityZoneUID;
			}
			set
			{
				if ((this._TrackIntegrityZoneUID != value))
				{
					this.OnTrackIntegrityZoneUIDChanging(value);
					this.SendPropertyChanging();
					this._TrackIntegrityZoneUID = value;
					this.SendPropertyChanged("TrackIntegrityZoneUID");
					this.OnTrackIntegrityZoneUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackIntegrityZoneName", DbType="NVarChar(50)")]
		public string TrackIntegrityZoneName
		{
			get
			{
				return this._TrackIntegrityZoneName;
			}
			set
			{
				if ((this._TrackIntegrityZoneName != value))
				{
					this.OnTrackIntegrityZoneNameChanging(value);
					this.SendPropertyChanging();
					this._TrackIntegrityZoneName = value;
					this.SendPropertyChanged("TrackIntegrityZoneName");
					this.OnTrackIntegrityZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIZMonitorModeTimeOut", DbType="Int")]
		public System.Nullable<int> TIZMonitorModeTimeOut
		{
			get
			{
				return this._TIZMonitorModeTimeOut;
			}
			set
			{
				if ((this._TIZMonitorModeTimeOut != value))
				{
					this.OnTIZMonitorModeTimeOutChanging(value);
					this.SendPropertyChanging();
					this._TIZMonitorModeTimeOut = value;
					this.SendPropertyChanged("TIZMonitorModeTimeOut");
					this.OnTIZMonitorModeTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityConfirmationRequired", DbType="Bit")]
		public System.Nullable<bool> AuthorityConfirmationRequired
		{
			get
			{
				return this._AuthorityConfirmationRequired;
			}
			set
			{
				if ((this._AuthorityConfirmationRequired != value))
				{
					this.OnAuthorityConfirmationRequiredChanging(value);
					this.SendPropertyChanging();
					this._AuthorityConfirmationRequired = value;
					this.SendPropertyChanged("AuthorityConfirmationRequired");
					this.OnAuthorityConfirmationRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateTrackNames", DbType="NVarChar(100)")]
		public string AlternateTrackNames
		{
			get
			{
				return this._AlternateTrackNames;
			}
			set
			{
				if ((this._AlternateTrackNames != value))
				{
					this.OnAlternateTrackNamesChanging(value);
					this.SendPropertyChanging();
					this._AlternateTrackNames = value;
					this.SendPropertyChanged("AlternateTrackNames");
					this.OnAlternateTrackNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateTrackAbbreviation", DbType="NVarChar(20)")]
		public string AlternateTrackAbbreviation
		{
			get
			{
				return this._AlternateTrackAbbreviation;
			}
			set
			{
				if ((this._AlternateTrackAbbreviation != value))
				{
					this.OnAlternateTrackAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._AlternateTrackAbbreviation = value;
					this.SendPropertyChanged("AlternateTrackAbbreviation");
					this.OnAlternateTrackAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMainTrackEntrance", DbType="Bit")]
		public System.Nullable<bool> AllowMainTrackEntrance
		{
			get
			{
				return this._AllowMainTrackEntrance;
			}
			set
			{
				if ((this._AllowMainTrackEntrance != value))
				{
					this.OnAllowMainTrackEntranceChanging(value);
					this.SendPropertyChanging();
					this._AllowMainTrackEntrance = value;
					this.SendPropertyChanged("AllowMainTrackEntrance");
					this.OnAllowMainTrackEntranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainTrackEntrancePoints", DbType="NVarChar(200)")]
		public string MainTrackEntrancePoints
		{
			get
			{
				return this._MainTrackEntrancePoints;
			}
			set
			{
				if ((this._MainTrackEntrancePoints != value))
				{
					this.OnMainTrackEntrancePointsChanging(value);
					this.SendPropertyChanging();
					this._MainTrackEntrancePoints = value;
					this.SendPropertyChanged("MainTrackEntrancePoints");
					this.OnMainTrackEntrancePointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowForceOperationsToTWC", DbType="Bit")]
		public System.Nullable<bool> AllowForceOperationsToTWC
		{
			get
			{
				return this._AllowForceOperationsToTWC;
			}
			set
			{
				if ((this._AllowForceOperationsToTWC != value))
				{
					this.OnAllowForceOperationsToTWCChanging(value);
					this.SendPropertyChanging();
					this._AllowForceOperationsToTWC = value;
					this.SendPropertyChanged("AllowForceOperationsToTWC");
					this.OnAllowForceOperationsToTWCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableAbsolutePermissiveBlock", DbType="Bit")]
		public System.Nullable<bool> EnableAbsolutePermissiveBlock
		{
			get
			{
				return this._EnableAbsolutePermissiveBlock;
			}
			set
			{
				if ((this._EnableAbsolutePermissiveBlock != value))
				{
					this.OnEnableAbsolutePermissiveBlockChanging(value);
					this.SendPropertyChanging();
					this._EnableAbsolutePermissiveBlock = value;
					this.SendPropertyChanged("EnableAbsolutePermissiveBlock");
					this.OnEnableAbsolutePermissiveBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsolutePermissiveBlockPTCUID", DbType="Int")]
		public System.Nullable<int> AbsolutePermissiveBlockPTCUID
		{
			get
			{
				return this._AbsolutePermissiveBlockPTCUID;
			}
			set
			{
				if ((this._AbsolutePermissiveBlockPTCUID != value))
				{
					this.OnAbsolutePermissiveBlockPTCUIDChanging(value);
					this.SendPropertyChanging();
					this._AbsolutePermissiveBlockPTCUID = value;
					this.SendPropertyChanged("AbsolutePermissiveBlockPTCUID");
					this.OnAbsolutePermissiveBlockPTCUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineSegmentGroupUID", DbType="NVarChar(20)")]
		public string LineSegmentGroupUID
		{
			get
			{
				return this._LineSegmentGroupUID;
			}
			set
			{
				if ((this._LineSegmentGroupUID != value))
				{
					this.OnLineSegmentGroupUIDChanging(value);
					this.SendPropertyChanging();
					this._LineSegmentGroupUID = value;
					this.SendPropertyChanged("LineSegmentGroupUID");
					this.OnLineSegmentGroupUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerailmentDetectorEnabled", DbType="Bit")]
		public System.Nullable<bool> DerailmentDetectorEnabled
		{
			get
			{
				return this._DerailmentDetectorEnabled;
			}
			set
			{
				if ((this._DerailmentDetectorEnabled != value))
				{
					this.OnDerailmentDetectorEnabledChanging(value);
					this.SendPropertyChanging();
					this._DerailmentDetectorEnabled = value;
					this.SendPropertyChanged("DerailmentDetectorEnabled");
					this.OnDerailmentDetectorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerailmentDetectorIndBit", DbType="NVarChar(50)")]
		public string DerailmentDetectorIndBit
		{
			get
			{
				return this._DerailmentDetectorIndBit;
			}
			set
			{
				if ((this._DerailmentDetectorIndBit != value))
				{
					this.OnDerailmentDetectorIndBitChanging(value);
					this.SendPropertyChanging();
					this._DerailmentDetectorIndBit = value;
					this.SendPropertyChanged("DerailmentDetectorIndBit");
					this.OnDerailmentDetectorIndBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerailmentDetectorCtlBit", DbType="NVarChar(50)")]
		public string DerailmentDetectorCtlBit
		{
			get
			{
				return this._DerailmentDetectorCtlBit;
			}
			set
			{
				if ((this._DerailmentDetectorCtlBit != value))
				{
					this.OnDerailmentDetectorCtlBitChanging(value);
					this.SendPropertyChanging();
					this._DerailmentDetectorCtlBit = value;
					this.SendPropertyChanged("DerailmentDetectorCtlBit");
					this.OnDerailmentDetectorCtlBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DerailmentDetectorInhibited", DbType="Bit")]
		public System.Nullable<bool> DerailmentDetectorInhibited
		{
			get
			{
				return this._DerailmentDetectorInhibited;
			}
			set
			{
				if ((this._DerailmentDetectorInhibited != value))
				{
					this.OnDerailmentDetectorInhibitedChanging(value);
					this.SendPropertyChanging();
					this._DerailmentDetectorInhibited = value;
					this.SendPropertyChanged("DerailmentDetectorInhibited");
					this.OnDerailmentDetectorInhibitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilepostPrefix", DbType="NVarChar(10)")]
		public string MilepostPrefix
		{
			get
			{
				return this._MilepostPrefix;
			}
			set
			{
				if ((this._MilepostPrefix != value))
				{
					this.OnMilepostPrefixChanging(value);
					this.SendPropertyChanging();
					this._MilepostPrefix = value;
					this.SendPropertyChanged("MilepostPrefix");
					this.OnMilepostPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalReferenceUID", DbType="NVarChar(50)")]
		public string AdditionalReferenceUID
		{
			get
			{
				return this._AdditionalReferenceUID;
			}
			set
			{
				if ((this._AdditionalReferenceUID != value))
				{
					this.OnAdditionalReferenceUIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalReferenceUID = value;
					this.SendPropertyChanged("AdditionalReferenceUID");
					this.OnAdditionalReferenceUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnablePositionReporting", DbType="Bit")]
		public System.Nullable<bool> EnablePositionReporting
		{
			get
			{
				return this._EnablePositionReporting;
			}
			set
			{
				if ((this._EnablePositionReporting != value))
				{
					this.OnEnablePositionReportingChanging(value);
					this.SendPropertyChanging();
					this._EnablePositionReporting = value;
					this.SendPropertyChanged("EnablePositionReporting");
					this.OnEnablePositionReportingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackNameAlias", DbType="NVarChar(50)")]
		public string TrackNameAlias
		{
			get
			{
				return this._TrackNameAlias;
			}
			set
			{
				if ((this._TrackNameAlias != value))
				{
					this.OnTrackNameAliasChanging(value);
					this.SendPropertyChanging();
					this._TrackNameAlias = value;
					this.SendPropertyChanged("TrackNameAlias");
					this.OnTrackNameAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableNonControlledSiding", DbType="Bit")]
		public System.Nullable<bool> EnableNonControlledSiding
		{
			get
			{
				return this._EnableNonControlledSiding;
			}
			set
			{
				if ((this._EnableNonControlledSiding != value))
				{
					this.OnEnableNonControlledSidingChanging(value);
					this.SendPropertyChanging();
					this._EnableNonControlledSiding = value;
					this.SendPropertyChanged("EnableNonControlledSiding");
					this.OnEnableNonControlledSidingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableControlledSiding", DbType="Bit")]
		public System.Nullable<bool> EnableControlledSiding
		{
			get
			{
				return this._EnableControlledSiding;
			}
			set
			{
				if ((this._EnableControlledSiding != value))
				{
					this.OnEnableControlledSidingChanging(value);
					this.SendPropertyChanging();
					this._EnableControlledSiding = value;
					this.SendPropertyChanged("EnableControlledSiding");
					this.OnEnableControlledSidingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisallowLeftSignalRequestOnOccupancy", DbType="Bit")]
		public System.Nullable<bool> DisallowLeftSignalRequestOnOccupancy
		{
			get
			{
				return this._DisallowLeftSignalRequestOnOccupancy;
			}
			set
			{
				if ((this._DisallowLeftSignalRequestOnOccupancy != value))
				{
					this.OnDisallowLeftSignalRequestOnOccupancyChanging(value);
					this.SendPropertyChanging();
					this._DisallowLeftSignalRequestOnOccupancy = value;
					this.SendPropertyChanged("DisallowLeftSignalRequestOnOccupancy");
					this.OnDisallowLeftSignalRequestOnOccupancyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisallowRightSignalRequestOnOccupancy", DbType="Bit")]
		public System.Nullable<bool> DisallowRightSignalRequestOnOccupancy
		{
			get
			{
				return this._DisallowRightSignalRequestOnOccupancy;
			}
			set
			{
				if ((this._DisallowRightSignalRequestOnOccupancy != value))
				{
					this.OnDisallowRightSignalRequestOnOccupancyChanging(value);
					this.SendPropertyChanging();
					this._DisallowRightSignalRequestOnOccupancy = value;
					this.SendPropertyChanged("DisallowRightSignalRequestOnOccupancy");
					this.OnDisallowRightSignalRequestOnOccupancyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackSpeedAverage", DbType="Int")]
		public System.Nullable<int> TrackSpeedAverage
		{
			get
			{
				return this._TrackSpeedAverage;
			}
			set
			{
				if ((this._TrackSpeedAverage != value))
				{
					this.OnTrackSpeedAverageChanging(value);
					this.SendPropertyChanging();
					this._TrackSpeedAverage = value;
					this.SendPropertyChanged("TrackSpeedAverage");
					this.OnTrackSpeedAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackSpeedMaximum", DbType="Int")]
		public System.Nullable<int> TrackSpeedMaximum
		{
			get
			{
				return this._TrackSpeedMaximum;
			}
			set
			{
				if ((this._TrackSpeedMaximum != value))
				{
					this.OnTrackSpeedMaximumChanging(value);
					this.SendPropertyChanging();
					this._TrackSpeedMaximum = value;
					this.SendPropertyChanged("TrackSpeedMaximum");
					this.OnTrackSpeedMaximumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackElevationAverage", DbType="Float")]
		public System.Nullable<double> TrackElevationAverage
		{
			get
			{
				return this._TrackElevationAverage;
			}
			set
			{
				if ((this._TrackElevationAverage != value))
				{
					this.OnTrackElevationAverageChanging(value);
					this.SendPropertyChanging();
					this._TrackElevationAverage = value;
					this.SendPropertyChanged("TrackElevationAverage");
					this.OnTrackElevationAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackElevationMaximum", DbType="Float")]
		public System.Nullable<double> TrackElevationMaximum
		{
			get
			{
				return this._TrackElevationMaximum;
			}
			set
			{
				if ((this._TrackElevationMaximum != value))
				{
					this.OnTrackElevationMaximumChanging(value);
					this.SendPropertyChanging();
					this._TrackElevationMaximum = value;
					this.SendPropertyChanged("TrackElevationMaximum");
					this.OnTrackElevationMaximumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackElevationAscending", DbType="Bit")]
		public System.Nullable<bool> TrackElevationAscending
		{
			get
			{
				return this._TrackElevationAscending;
			}
			set
			{
				if ((this._TrackElevationAscending != value))
				{
					this.OnTrackElevationAscendingChanging(value);
					this.SendPropertyChanging();
					this._TrackElevationAscending = value;
					this.SendPropertyChanged("TrackElevationAscending");
					this.OnTrackElevationAscendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackSpeedMaximumFreight", DbType="Int")]
		public System.Nullable<int> TrackSpeedMaximumFreight
		{
			get
			{
				return this._TrackSpeedMaximumFreight;
			}
			set
			{
				if ((this._TrackSpeedMaximumFreight != value))
				{
					this.OnTrackSpeedMaximumFreightChanging(value);
					this.SendPropertyChanging();
					this._TrackSpeedMaximumFreight = value;
					this.SendPropertyChanged("TrackSpeedMaximumFreight");
					this.OnTrackSpeedMaximumFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackSpeedMaximumPassengar", DbType="Int")]
		public System.Nullable<int> TrackSpeedMaximumPassengar
		{
			get
			{
				return this._TrackSpeedMaximumPassengar;
			}
			set
			{
				if ((this._TrackSpeedMaximumPassengar != value))
				{
					this.OnTrackSpeedMaximumPassengarChanging(value);
					this.SendPropertyChanging();
					this._TrackSpeedMaximumPassengar = value;
					this.SendPropertyChanged("TrackSpeedMaximumPassengar");
					this.OnTrackSpeedMaximumPassengarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QIND", DbType="NVarChar(50)")]
		public string QIND
		{
			get
			{
				return this._QIND;
			}
			set
			{
				if ((this._QIND != value))
				{
					this.OnQINDChanging(value);
					this.SendPropertyChanging();
					this._QIND = value;
					this.SendPropertyChanged("QIND");
					this.OnQINDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QCTL", DbType="NVarChar(50)")]
		public string QCTL
		{
			get
			{
				return this._QCTL;
			}
			set
			{
				if ((this._QCTL != value))
				{
					this.OnQCTLChanging(value);
					this.SendPropertyChanging();
					this._QCTL = value;
					this.SendPropertyChanged("QCTL");
					this.OnQCTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTCTrackType", DbType="NVarChar(50)")]
		public string PTCTrackType
		{
			get
			{
				return this._PTCTrackType;
			}
			set
			{
				if ((this._PTCTrackType != value))
				{
					this.OnPTCTrackTypeChanging(value);
					this.SendPropertyChanging();
					this._PTCTrackType = value;
					this.SendPropertyChanged("PTCTrackType");
					this.OnPTCTrackTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointControl", DbType="Bit")]
		public System.Nullable<bool> JointControl
		{
			get
			{
				return this._JointControl;
			}
			set
			{
				if ((this._JointControl != value))
				{
					this.OnJointControlChanging(value);
					this.SendPropertyChanging();
					this._JointControl = value;
					this.SendPropertyChanged("JointControl");
					this.OnJointControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSEnabled", DbType="Bit")]
		public System.Nullable<bool> TMPSEnabled
		{
			get
			{
				return this._TMPSEnabled;
			}
			set
			{
				if ((this._TMPSEnabled != value))
				{
					this.OnTMPSEnabledChanging(value);
					this.SendPropertyChanging();
					this._TMPSEnabled = value;
					this.SendPropertyChanged("TMPSEnabled");
					this.OnTMPSEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSCircuitName", DbType="NVarChar(50)")]
		public string TMPSCircuitName
		{
			get
			{
				return this._TMPSCircuitName;
			}
			set
			{
				if ((this._TMPSCircuitName != value))
				{
					this.OnTMPSCircuitNameChanging(value);
					this.SendPropertyChanging();
					this._TMPSCircuitName = value;
					this.SendPropertyChanged("TMPSCircuitName");
					this.OnTMPSCircuitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSLinkLeft", DbType="Int")]
		public System.Nullable<int> TMPSLinkLeft
		{
			get
			{
				return this._TMPSLinkLeft;
			}
			set
			{
				if ((this._TMPSLinkLeft != value))
				{
					this.OnTMPSLinkLeftChanging(value);
					this.SendPropertyChanging();
					this._TMPSLinkLeft = value;
					this.SendPropertyChanged("TMPSLinkLeft");
					this.OnTMPSLinkLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSLinkRight", DbType="Int")]
		public System.Nullable<int> TMPSLinkRight
		{
			get
			{
				return this._TMPSLinkRight;
			}
			set
			{
				if ((this._TMPSLinkRight != value))
				{
					this.OnTMPSLinkRightChanging(value);
					this.SendPropertyChanging();
					this._TMPSLinkRight = value;
					this.SendPropertyChanged("TMPSLinkRight");
					this.OnTMPSLinkRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSLinkAlt1", DbType="Int")]
		public System.Nullable<int> TMPSLinkAlt1
		{
			get
			{
				return this._TMPSLinkAlt1;
			}
			set
			{
				if ((this._TMPSLinkAlt1 != value))
				{
					this.OnTMPSLinkAlt1Changing(value);
					this.SendPropertyChanging();
					this._TMPSLinkAlt1 = value;
					this.SendPropertyChanged("TMPSLinkAlt1");
					this.OnTMPSLinkAlt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSLinkAlt2", DbType="Int")]
		public System.Nullable<int> TMPSLinkAlt2
		{
			get
			{
				return this._TMPSLinkAlt2;
			}
			set
			{
				if ((this._TMPSLinkAlt2 != value))
				{
					this.OnTMPSLinkAlt2Changing(value);
					this.SendPropertyChanging();
					this._TMPSLinkAlt2 = value;
					this.SendPropertyChanged("TMPSLinkAlt2");
					this.OnTMPSLinkAlt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSLinkAlt3", DbType="Int")]
		public System.Nullable<int> TMPSLinkAlt3
		{
			get
			{
				return this._TMPSLinkAlt3;
			}
			set
			{
				if ((this._TMPSLinkAlt3 != value))
				{
					this.OnTMPSLinkAlt3Changing(value);
					this.SendPropertyChanging();
					this._TMPSLinkAlt3 = value;
					this.SendPropertyChanged("TMPSLinkAlt3");
					this.OnTMPSLinkAlt3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMPSLinkAlt4", DbType="Int")]
		public System.Nullable<int> TMPSLinkAlt4
		{
			get
			{
				return this._TMPSLinkAlt4;
			}
			set
			{
				if ((this._TMPSLinkAlt4 != value))
				{
					this.OnTMPSLinkAlt4Changing(value);
					this.SendPropertyChanging();
					this._TMPSLinkAlt4 = value;
					this.SendPropertyChanged("TMPSLinkAlt4");
					this.OnTMPSLinkAlt4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatitudeLeft", DbType="Float")]
		public System.Nullable<double> LatitudeLeft
		{
			get
			{
				return this._LatitudeLeft;
			}
			set
			{
				if ((this._LatitudeLeft != value))
				{
					this.OnLatitudeLeftChanging(value);
					this.SendPropertyChanging();
					this._LatitudeLeft = value;
					this.SendPropertyChanged("LatitudeLeft");
					this.OnLatitudeLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongitudeLeft", DbType="Float")]
		public System.Nullable<double> LongitudeLeft
		{
			get
			{
				return this._LongitudeLeft;
			}
			set
			{
				if ((this._LongitudeLeft != value))
				{
					this.OnLongitudeLeftChanging(value);
					this.SendPropertyChanging();
					this._LongitudeLeft = value;
					this.SendPropertyChanged("LongitudeLeft");
					this.OnLongitudeLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatitudeRight", DbType="Float")]
		public System.Nullable<double> LatitudeRight
		{
			get
			{
				return this._LatitudeRight;
			}
			set
			{
				if ((this._LatitudeRight != value))
				{
					this.OnLatitudeRightChanging(value);
					this.SendPropertyChanging();
					this._LatitudeRight = value;
					this.SendPropertyChanged("LatitudeRight");
					this.OnLatitudeRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongitudeRight", DbType="Float")]
		public System.Nullable<double> LongitudeRight
		{
			get
			{
				return this._LongitudeRight;
			}
			set
			{
				if ((this._LongitudeRight != value))
				{
					this.OnLongitudeRightChanging(value);
					this.SendPropertyChanging();
					this._LongitudeRight = value;
					this.SendPropertyChanged("LongitudeRight");
					this.OnLongitudeRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceIgnoreTrainDirectionChange", DbType="Bit")]
		public System.Nullable<bool> ForceIgnoreTrainDirectionChange
		{
			get
			{
				return this._ForceIgnoreTrainDirectionChange;
			}
			set
			{
				if ((this._ForceIgnoreTrainDirectionChange != value))
				{
					this.OnForceIgnoreTrainDirectionChangeChanging(value);
					this.SendPropertyChanging();
					this._ForceIgnoreTrainDirectionChange = value;
					this.SendPropertyChanged("ForceIgnoreTrainDirectionChange");
					this.OnForceIgnoreTrainDirectionChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppressAuthorityRelease", DbType="Bit")]
		public System.Nullable<bool> SuppressAuthorityRelease
		{
			get
			{
				return this._SuppressAuthorityRelease;
			}
			set
			{
				if ((this._SuppressAuthorityRelease != value))
				{
					this.OnSuppressAuthorityReleaseChanging(value);
					this.SendPropertyChanging();
					this._SuppressAuthorityRelease = value;
					this.SendPropertyChanged("SuppressAuthorityRelease");
					this.OnSuppressAuthorityReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackWarrantEnforcementEnabled", DbType="Bit")]
		public System.Nullable<bool> TrackWarrantEnforcementEnabled
		{
			get
			{
				return this._TrackWarrantEnforcementEnabled;
			}
			set
			{
				if ((this._TrackWarrantEnforcementEnabled != value))
				{
					this.OnTrackWarrantEnforcementEnabledChanging(value);
					this.SendPropertyChanging();
					this._TrackWarrantEnforcementEnabled = value;
					this.SendPropertyChanged("TrackWarrantEnforcementEnabled");
					this.OnTrackWarrantEnforcementEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RailroadUniqueIdentifierName", DbType="NVarChar(100)")]
		public string RailroadUniqueIdentifierName
		{
			get
			{
				return this._RailroadUniqueIdentifierName;
			}
			set
			{
				if ((this._RailroadUniqueIdentifierName != value))
				{
					this.OnRailroadUniqueIdentifierNameChanging(value);
					this.SendPropertyChanging();
					this._RailroadUniqueIdentifierName = value;
					this.SendPropertyChanged("RailroadUniqueIdentifierName");
					this.OnRailroadUniqueIdentifierNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
